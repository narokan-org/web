name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy

    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          submodules: true
          lfs: false

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Generate unique app name
        id: generate_name
        run: echo "AZURE_STATIC_WEB_APP_NAME=app-basel-dev-$(date +%s)" >> $GITHUB_ENV

      # - name: Delete previous Static Web App
      #   run: |
      #     az staticwebapp list --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --query "[?contains(name, 'app-basel-dev')].{name:name}" -o tsv | while read appname; do
      #       az staticwebapp delete --name $appname --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --yes
      #     done

      - name: Create Static Web App
        run: |
          az staticwebapp create \
            --name ${{ env.AZURE_STATIC_WEB_APP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --source https://github.com/${{ github.repository }} \
            --location ${{ secrets.AZURE_LOCATION }} \
            --branch main \
            --token ${{ secrets.GITHUB_TOKEN }}

      - name: Get Deployment Token
        id: get_token
        run: |
          token=$(az staticwebapp secrets list --name ${{ env.AZURE_STATIC_WEB_APP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --query "properties.apiKey" -o tsv)
          echo "AZURE_STATIC_WEB_APPS_API_TOKEN=$token" >> $GITHUB_ENV

      - name: Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: './'
          api_location: 'build/server'
          output_location: 'build/static'
